"352","383","4","404","406","416","437","440","480","496","498","509","515","520","531","658","672","776","__PAGENAME__","sitedesign/logo&#169;1539","upvote375","upvote474","viewed663"
"Logic/reasoning confusion in UGC book re network/relational logical/physical keys &amp; schema/metatdata/dictionary","I was just going through the questions of UGC-NET(GS) &amp; GATE(CS/IT), in which I had some difficulties.</p> <p>There are some questions whose answers are different than my answers. Can you help me find the solution and tell me whether I am wrong or the answers given are wrong? What is the reasoning behind their answers and, if different, the correct answers?</p> <blockquote> <p>Q 1: Choose the correct statement.<br> (a) Network models are complicated by physical key, but the relational model is faster because it uses logical keys.<br> (b) Network models are complicated by logical key, but the relational model is faster because it uses physical keys.<br> (c) Network models are complicated by physical key, but the relational model is slower because it uses logical keys.<br> (d) Network models are complicated by logical key, but the relational model is slower because it uses physical keys. </p> <p>Q 2: The schema of a relation is an example of<br> a. Data Dictionary<br> b. Metadata<br> c. Entity<br> d. Relationship </p> </blockquote> <p>According to me answer of Q 1 is a but it is given b(according to book).<br> According to me answer of Q 2 is a but it is given b(according to book). </p> <p>These are basic questions but a little bit confusing and it is important to know the logic behind them.","database - Logic/reasoning confusion in UGC book re network/relational logical/physical keys &amp; schema/metatdata/dictionary","Jul 20","16:20","Bhavya","add a comment","","Googling the text of Q1 a we find <a href=""https://books.google.ca/books?id=5tatBaRplIgC&amp;printsec=frontcover"" rel=""nofollow noreferrer"">Multiplechoice Questions in Computer Science</a> has these choices in a different order as <a href=""https://books.google.ca/books?id=5tatBaRplIgC&amp;pg=PA247&amp;focus=viewport"" rel=""nofollow noreferrer"">question 35 on page 247</a> and gives answer <a href=""https://books.google.ca/books?id=5tatBaRplIgC&amp;pg=PA249&amp;focus=viewport"" rel=""nofollow noreferrer""><strong>physical-faster-logical</strong> on page 249</a> as its a. This is also <strong>your choice a</strong>. (For my guess at a rationale for b, see below.)</p> <p>That's what we would expect from a network model's logical keys typically also being physical keys and the relational model's logical keys having no fixed association with physical keys. (Nevertheless it's not correct to say the relational model is faster, see below.)</p> <p>PS The <em>correct</em> distinction between the models is that network model logical keys are <em>an unnecessary data structure in addition to tables</em> and that typically it has <em>meaningful logical order</em> to keys, rows and/or columns. (The point of using a network model is to have logical keys that are physical keys, but that's irrelevant when comparing the <em>models</em>, see below.)</p> <hr> <p><strong>Q1 (e) None of the above.</strong> That is a terrible question for multiple reasons. Eg: ""uses logical keys (in the model)"" can mean ""can optimize physical keys (in execution)"" which could be phrased as ""uses physical keys (in execution)"". Eg: Both models are ""logical"" until you hypothesize a physical model. So the network model is ""complicated by logical keys"". But the point of the network model is that its logical keys <em>are</em> physical keys for the <em>actual</em> physical model. So it is ""complicated by physical keys"".</p> <p>Find exactly what a reference textbook means by the various terms. Apparently unfortunately your exams can depend pedantically on artifacts of how a topic happens to be phrased in the reference material and how the particular wording in the exams is interpreted.</p> <p>Here's a <em>guess</em> at a justification for (b): The network model is ""complicated by logical keys (in the model)"". A relational DBMS can typically optimize query execution ""logically"" by rewriting based on relational algebra equivalences and ""physically"" via statistics and indexes. A network DBMS query execution can't be ""logically"" optimized and a query is either fast because the logical=physical keys were chosen to make it fast or is slow because the logical=physical keys were chosen to make <em>other</em> queries fast. So the relational execution/implementation will not be impeded by inappropriate ""physical key use"" and will be both logically &amp; physically optimized in its ""physical key use"". (Nevertheless the specialization/hardwiring of non-relational keys/queries <em>does</em> make them faster <em>in some cases</em>.)</p> <p><strong>Q2 (b).</strong> A definition of ""data dictionary"" typically doesn't include constraints. A definition of ""schema"" can include constraints. A definition of ""metadata"" typically does include constraints. A data dictionary is a database schema (minus constraints if so defined). A database schema is all the metadata (minus constraints if so defined). But a <em>table</em> schema is just <em>some</em> of ""the"" metadata, ie it ""is an example of metadata"". (Nevertheless, more difficulties with unclear language.)","Jul 21","6:24","philipxy","14","45","><td></td><td","1 month","1 month","","page92","","0","1","22"
"What exactly does the three-schema architecture refer to?","Sorry if the question is vague. I've been trying to learn Database Concepts on my own and I've been trying to understand this ""Internal, Conceptual, External Schema Model"" for quite a while, with no success.</p> <p>Almost everywhere on the internet, it is stated that the internal schema refers to how data is stored, external schema refers to how the users see the database and I still don't understand what a conceptual schema refers to.</p> <p>I know a bit of SQL and I've been trying to relate all this to that(correct me if that is not the right way to approach). So suppose I create a table using SQL and decide to view the contents of the table using the <code>SELECT * FROM table;</code>command. Is the output the external schema of the table?</p> <p>I'm really sorry if the question doesn't make sense, but I'm unable to understand this topic.</p> <p>Previous questions asking the same were not received well: <a href=""https://stackoverflow.com/questions/28796538/the-three-schema-of-the-database"">The three schema of the database</a>","database - What exactly does the three-schema architecture refer to?","Sep 1","8:14","Karan Singh","add a comment","","3-schema (external, conceptual &amp; internal) &amp; 3-tier (conceptual, logical and physical) are ways of looking at systems. It happens that they are not typically reflected clearly in language syntax &amp; semantics. Read the linked resources in <a href=""https://stackoverflow.com/a/28805630/3404097"">the answer that you link to by me</a>. (But beware per the answer where resources are confused.) Learn the abstract structures/organizations and when you look at systems &amp; processes it can help you to understand and use them.</p> <p>This is similar to the situation with ""client-server architecture"". Maybe there is a physical ""server"" literally wired to some other ""user"" computer. But maybe we just have two software modules in the same program text. It is an abstract structure/organization which we can refer to when some system's parts are related to each other that way or when they <em>aren't</em> related to each that way.</p> <p>Eg SQL syntax mixes external/conceptual logical schema notions (tables with no row order queried by syntax not reflecting execution order, transactions, etc) and internal physical schema notions (indexes, query plans, storage, schedules, etc). Similarly DBMSs allow definition of what databases &amp; tables a particular user sees defined in terms of other databases &amp; tables--roughly corresponding to external &amp; conceptual schemas respectively. But per above the SQL user vs DBA logical views are both mixes of non-internal &amp; internal. SQL DDL (data definition language) doesn't clearly separate user, DBA &amp; physical system aspects per the architecture. Nevertheless we do talk about what users can see vs what DBAs can see vs physical/storage/representation aspects.","Sep 3","22:59","philipxy","14","45","><td></td><td","13 days","10 days","=""module sidebar-linked""> <h4 id=""h-linked"">Linked</h4> <div class=""linked"" data-tracker=""lq=1""> <div class=""spacer""> <a href=""/q/28796538"" title=""Vote score (upvotes - downvotes)""> <div class=""answer-votes answered-accepted default"">0</div> </a> <a href=""/questions/28796538/the-three-schema-of-the-database?noredirect=1"" class=""question-hyperlink"">The three schema of the database</a> </div> </div> </div> <div class","page95","","-1","0","23"
"How to transform this into Boyce-Codd Normal Form?","I don't understand what I am doing wrong here. This is what I am being asked:</p> <pre><code>Normalize the following schema into BNCF: T ((A, B), C, E, F, G) The functional dependencies besides the key are: A, B → C, E F, B, A → G B → B F, C → C, G, E C, F → E E → G, E </code></pre> <p>So, I came up with this:</p> <pre><code>T ((A, B), C, E, F) X((A,B), C, E) W ((F,B,A), G) Q ((B)) L ((F,C), G, E) J ((C,F), E) R ((E),G) </code></pre> <p>But it gives me this error: </p> <blockquote> <p>Result is not as expected. Modify your input and try again.</p> </blockquote> <p>And I have no clue where the error is. Can someone explain to me what I should do?","database - How to transform this into Boyce-Codd Normal Form?","May 14","20:17","Siyah","","show <b>2</b> more comments","If the nested parentheses indicate a CK (candidate key) then</p> <p><code>A, B → C, E</code> is implied by the CK<br> <code>F, B, A → G</code> ditto<br> <code>B → B</code> is trivial<br> <code>F, C → C, G, E</code> is implied by <code>F, C → G, E</code><br> <code>C, F → E</code> is redundant given <code>F, C → G, E</code><br> <code>E → G, E</code> means <code>F, C → G, E</code> is implied by <code>F, C → E</code> </p> <p>{A, B} being a CK means <code>A, B → C, E, F, G</code>, plus we have <code>F, C → E</code> and <code>E → G</code>. We can use a BCNF algorithm to get a decomposition comprising ((A, B), C, F) plus your J ((C,F), E) and R ((E), G).</p> <p>You don't explain your solution (what BCNF algorithm you are using and what choices you made). But note that the FDs that hold in a relation are all the ones generated by Armstrong's axioms when some explicitly given ones hold. (Including the ones that hold because we were told a CK.) Also note that in one BCNF algorithm when we pick some FD (functional dependency) X → Y that holds in schema R that violates BCNF we replace R by schemas X+ and R - (X+ - X); and the set of FDs used is the closure of the explicitly given ones.","May 15","8:24","philipxy","14","45","id=""comment-74987572"" class=""comment ""> <td> <table> <tbody> <tr> <td class="" comment-score""> </td> <td> </td> </tr> </tbody> </table> </td> <td class=""comment-text""> <div style=""display: block;"" class=""comment-body""> <span class=""comment-copy"">Thanks mate, I just needed an explanation! Appreciate it.</span> &ndash; <a href=""/users/2485889/siyah"" title=""1,491 reputation"" class=""comment-user owner"">Siyah</a> <span class=""comment-date"" dir=""ltr""><span title=""2017-05-15 12:15:30Z"" class=""relativetime-clean"">May 15 at 12:15</span></span> <span class=""edited-yes"" title=""this comment was edited 1 time""></span> </div","4 months","2 months","","page94","","0","1","36"
"Is A → B the same as B → A when speaking of functional dependencies?","This might very simple but I just had to check with you guys.</p> <p>When it comes to databases, does the arrow in literature imply vise versa on equality?</p> <p>Meaning, is A → B considered the SAME as B → A, in particular when it comes to databases and functional dependencies?","database - Is A → B the same as B → A when speaking of functional dependencies?","May 24","10:45","Ann","add a comment","","Please read the reference(s) you were given for FDs (functional dependencies).</p> <p>A FD is an expression of the form ""A → B"" for sets of attributes A &amp; B. So if A and B are different, A → B is a different FD than B → A.</p> <p>For a relation value or variable R, ""A → B holds in R"" and ""A → B in R"" say that if two R tuples have the same subtuple for A then they have the same subtuple for B.</p> <p>Is A → B in R equivalent to B → A in R? If A and B are the same set, then yes. But what if they aren't?</p> <pre><code>X Y a 1 b 1 </code></pre> <p>{X} → {Y} holds in that relation value. {X} &lt;> {Y}. Does {Y} → {X} also hold?","May 24","19:38","philipxy","14","45","><td></td><td","3 months","3 months","","page97","","-1","0","39"
"Break atomicity rule storing list of items when there is no reason to query about items? Verses join table that requires whole join table be scanned","This specific case is regarding lists, and items.</p> <p>The same item may belong to multiple lists, and each list has many items.</p> <p>Option A (the ""proper"" way as I understand it): Make a join table, which has list_ID and item_ID. When I want all the items in a list query for list_ID.</p> <p>Option B (break the atomicity rule): Make a list table. Primary Key, and either repeating columns or non-atomic columns. As I understand it both of these deviations suffer the exact same drawbacks, which is the inability to inefficiently query on items.</p> <p>As I understand it, normalizing a database to NF-1 would be making sure each column is atomic, so I should NOT do option B. The reason is that would make querying items hard. E.g ""how many of this item got sold"" or ""how many times this this item is in a list""</p> <p>I don't think I will ever need that data (is that already a mistake / common pitfall? is there a meme amongst experienced database engineers like ""you'll always want to be able to query, and you won't have time to reorganize the database when you scale""? Am I overestimating how long itd take MySQL to scan a join table?</p> <p>I can't find anything to support this but at the same time I feel that its common sense to accept that non-compliant form if I know that the drawback is not important to the application. But I am not an expert and these rules were written by experts.","exception - Break atomicity rule storing list of items when there is no reason to query about items? Verses join table that requires whole join table be scanned","Jun 7","1:15","Chan Kwon","add a comment","","<strong>TL; DR</strong> If you are going to write generic query/constraint expressions about parts of values of a column then the parts ought to get their own columns; otherwise not. If you change your mind then you can supply the old schema via a view, although typically updates would need recoding.</p> <hr> <p>Relations have rows that have for each column one value of that column's type. Notions of ""relation"" or ""normalized"" or ""1NF"" in terms of some notion of <a href=""https://stackoverflow.com/a/24038895/3404097"">""atomicity""</a> are vague, confused and unhelpful. Eg a list is typically called ""non-atomic"", while a string is called ""atomic""--even though a string is a list of characters. Bite the bullet--it's nonsense.</p> <p><em>Every single design</em> has to make this where-the-turtles-stop decision about its <a href=""https://stackoverflow.com/a/37483508/3404097"">column types</a>. It cannot be avoided. (Even when you get to a bit-typed column, you can decide to have a separate table for only the rows that would have 1s.) (Then there is no column hence no column type.) It is a design quality issue, but not an issue of normalization to higher NFs (normal forms).</p> <p>Nothing in ""normalization"" to higher NFs (reducing certain update/redundancy problems by replacing a table by tables that join back to it) requires prior application-dependent <a href=""https://stackoverflow.com/a/40640962/3404097"">""normalization"" to ""1NF"" per ""atomicity""</a> (replacing a table by some table(s) with columns for parts of its columns). Because when rearranging to ""1NF"" would <em>help</em> we would need to write constraint expressions involving parts of values of columns so we would be doing that rearrangement <em>anyway</em>.</p> <p>(Projection/join normalization to higher NF components per FDs (functional dependencies) &amp; JDs (join dependencies) is independent of column types. And any situation where there are constraints on a column that are not addressed by normalization to higher NFs but that would be addressed after ""atomicizing"" is a situation where there is a constraint whose expression involves parts of values of the column, which should therefore be ""atomicized"" anyway.)</p> <p>(Unfortunately ""normalized"" &amp; ""1NF"" &amp; ""0NF"" get used in many different ways, many nonsensical although common. Better to just say what exact property/properties you mean.)</p> <hr> <p>PS 1 A list is generally considered to be an ordered collection of items, a set being an unordered collection of items. Predicate ""collection <em>C</em> has item <em>I</em> as <em>Nth</em> member"" records a list, ""collection <em>C</em> has item <em>I</em> as a member"" a set.</p> <p>PS 2 PS Your presumption that a representation of a list or set ""vertically"" or ""compactly"" ""down"" a column in a table involves any more ""scanning"" than a representation ""horizontally"" or ""compactly"" ""across"" a value in a column in a row is naive/unjustified. Ie ((list, item1, 1), (list, item2, 2), ...) vs (list, [item1, item2, ...]).","Jun 7","5:16","philipxy","14","45","id=""comment-75842510"" class=""comment ""> <td> <table> <tbody> <tr> <td class="" comment-score""> </td> <td> </td> </tr> </tbody> </table> </td> <td class=""comment-text""> <div style=""display: block;"" class=""comment-body""> <span class=""comment-copy"">Thank you. @philipxy I think I understand the point you are making about how &quot;atomic&quot; you can get something. Its not as if I&#39;d store individual characters of an item_id in case i want to search by &quot;items where first letter = a&quot;. Likewise I will never want to wonder &quot;sets where they have item_id = X&quot;. I don&#39;t under stand what you are saying here: <code>&quot;Projection&#47;join normalization-to-higher-NFs theory is independent of column types. And any situation where there are constraints on a column that are not addressed ...(omit for char limit)... and so should be &quot;atomicized&quot; anyway.&quot;</code></span> &ndash; <a href=""/users/7692790/chan-kwon"" title=""1 reputation"" class=""comment-user owner"">Chan Kwon</a> <span class=""comment-date"" dir=""ltr""><span title=""2017-06-07 20:15:36Z"" class=""relativetime-clean"">Jun 7 at 20:15</span></span> </div> </td> </tr> <tr id=""comment-75890968"" class=""comment ""> <td> <table> <tbody> <tr> <td class="" comment-score""> </td> <td> </td> </tr> </tbody> </table> </td> <td class=""comment-text""> <div style=""display: block;"" class=""comment-body""> <span class=""comment-copy"">See my edited answer.</span> &ndash; <a href=""/users/3404097/philipxy"" title=""8,866 reputation"" class=""comment-user"">philipxy</a> <span class=""comment-date"" dir=""ltr""><span title=""2017-06-08 22:55:17Z"" class=""relativetime-clean"">Jun 8 at 22:55</span></span> </div","3 months","3 months","=""module sidebar-linked""> <h4 id=""h-linked"">Linked</h4> <div class=""linked"" data-tracker=""lq=1""> <div class=""spacer""> <a href=""/q/24029620"" title=""Vote score (upvotes - downvotes)""> <div class=""answer-votes answered-accepted default"">3</div> </a> <a href=""/questions/24029620/what-is-atomicity-in-dbms?noredirect=1"" class=""question-hyperlink"">What is atomicity in dbms</a> </div> <div class=""spacer""> <a href=""/q/37481380"" title=""Vote score (upvotes - downvotes)""> <div class=""answer-votes answered-accepted default"">1</div> </a> <a href=""/questions/37481380/minimum-no-of-tables-that-exists-after-decomposing-relation-r-into-1nf?noredirect=1"" class=""question-hyperlink"">Minimum no of tables that exists after decomposing relation R into 1NF?</a> </div> <div class=""spacer""> <a href=""/q/44530971"" title=""Vote score (upvotes - downvotes)""> <div class=""answer-votes default"">0</div> </a> <a href=""/questions/44530971/understanding-normalization-duplicates-i-guess-i-dont-adding-artist-tit?noredirect=1"" class=""question-hyperlink"">Understanding Normalization &amp; Duplicates - I Guess I Don&#39;t - Adding Artist &amp; Title Ids</a> </div> <div class=""spacer""> <a href=""/q/40623169"" title=""Vote score (upvotes - downvotes)""> <div class=""answer-votes answered-accepted default"">-3</div> </a> <a href=""/questions/40623169/normalization-in-database-management-system?noredirect=1"" class=""question-hyperlink"">Normalization in database management system</a> </div> </div> </div> <div class","page93","","0","0","36"
"Database Normalization - Foreign Key Consistency","I am developing a database schema and stuck on the fence about one part of the developing schema. I have foreign keys going to certain tables, with a lot of the tables containing a foreign key to one central table. </p> <p>Two of the tables I am designing, I set up with an ""ID type"" look up (foreign key to list the types/tables the ID belongs to) and then an FK ID value. I'm wondering if I should do that for all table foreign keys, to be consistent. For these 2 tables, they might need to be joined to a different table, depending on what the record will be about. Think people being tied to different aspects of a process, so that person record would be linked back to 1 table or a different one, depending on where they are involved in the process.</p> <p>For other tables, they really are only going to link to that main central table. Should I just leave an explicit foreign key, directly to that table, or make it consistently an ID type/table and an FK ID which is linked based on the ID type table?</p> <p>If this doesn't make sense, let me know and I'll try to explain better.</p> <p>Thanks!","Database Normalization - Foreign Key Consistency","Jun 16","17:33","missscripty","add a comment","","Talking to a colleague and it was advised that I not have a foreign key column, that links to different tables, based on another table identifier column. Apparently this can get dangerous quickly, as the ID could mistakenly get linked to the wrong table, if people aren't careful.</p> <p>The advice is to have the people table, and then multiple people cross-reference tables, one for each area of the data, where a person needs to be linked to. Each CR table will have a non-null foreign key, and records only to the 1 table the FK links to. There will also be a person type ID, so that a person can have more than one type/roll, within as many CRs where they need to exist.</p> <p>If anyone disagrees, I'm more than happy to get as many takes as I can.","Jun 16","19:02","missscripty","2","12","id=""comment-76188871"" class=""comment ""> <td> <table> <tbody> <tr> <td class="" comment-score""> </td> <td> </td> </tr> </tbody> </table> </td> <td class=""comment-text""> <div style=""display: block;"" class=""comment-body""> <span class=""comment-copy"">There&#39;s no inkling in your question that it&#39;s about what the first sentence in this answer is about. That FK anti-pattern is usually the wrong way to model &quot;SQL/database subtypes&quot;. (Google my stackoverflow comments about that. The rest of this answer is just as unclear as your question. You need to stop labeling things that you <i>haven&#39;t said</i> by words that come to mind (eg &quot;area of the data&quot;) and <i>say</i> what you mean. Examples help but you still need to say what they are examples <i>of</i>.</span> &ndash; <a href=""/users/3404097/philipxy"" title=""8,866 reputation"" class=""comment-user"">philipxy</a> <span class=""comment-date"" dir=""ltr""><span title=""2017-06-17 03:31:59Z"" class=""relativetime-clean"">Jun 17 at 3:31</span></span> </div> </td> </tr> <tr id=""comment-76271852"" class=""comment ""> <td> <table> <tbody> <tr> <td class="" comment-score""> </td> <td> </td> </tr> </tbody> </table> </td> <td class=""comment-text""> <div style=""display: block;"" class=""comment-body""> <span class=""comment-copy"">A FK constraint holds in a design when subrow values for a list of columns must appear for another list of columns. We declare FKs so the DBMS rejects invalid updates. If a column&#39;s values are only restricted to being in one of several other places (per a type column) then that is not an example of a FK holding; it&#39;s a different constraint. Distinct nullable column sets for each target table would be FKs. The type column could indicate which FK(s) (or tables, if there&#39;s one per table) hold. So could just whether each FK is null. But those are all anti-patterns for subtyping. Thus this answer.</span> &ndash; <a href=""/users/3404097/philipxy"" title=""8,866 reputation"" class=""comment-user"">philipxy</a> <span class=""comment-date"" dir=""ltr""><span title=""2017-06-20 03:05:41Z"" class=""relativetime-clean"">Jun 20 at 3:05</span></span> <span class=""edited-yes"" title=""this comment was edited 2 times""></span> </div","3 months","3 months","=""module sidebar-linked""> <h4 id=""h-linked"">Linked</h4> <div class=""linked"" data-tracker=""lq=1""> <div class=""spacer""> <a href=""/q/4969133"" title=""Vote score (upvotes - downvotes)""> <div class=""answer-votes answered-accepted default"">20</div> </a> <a href=""/questions/4969133/database-design-articles-blog-posts-photos-stories?noredirect=1"" class=""question-hyperlink"">Database design - articles, blog posts, photos, stories</a> </div> <div class=""spacer""> <a href=""/q/41047790"" title=""Vote score (upvotes - downvotes)""> <div class=""answer-votes default"">-1</div> </a> <a href=""/questions/41047790/mysql-foreign-key-using-more-than-one-field-to-reference-to-a-primary-key-from-a?noredirect=1"" class=""question-hyperlink"">MySQL foreign key using more than one field to reference to a primary key from another table</a> </div> </div> </div> <div class","page96","","-1","0","42"
